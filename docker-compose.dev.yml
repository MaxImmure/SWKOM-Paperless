name: "paperless-api-dev"
version: "3.8"  

volumes:
  paperless-api-dev:
  paperless-ui:
  rabbitmq-dev:
  minio-dev:
  postgres-db-dev:

networks:
  external-nw:
     internal: false
  
services:
  paperless-rest:
    image: if22b190/paperless:dev
    container_name: paperless-rest
    volumes:
      - paperless-api-dev:/var/paperless-rest
    ports:
      - "8000:80"
    networks: 
      - external-nw
    depends_on:
      - rabbitmq
      - minio
      - database


  paperless-ui:
    image: if22b190/paperless-ui:latest
    container_name: paperless-ui
    volumes:
      - paperless-ui:/var/www
    ports:
      - "80:4200"
    networks: 
      - external-nw
    depends_on:
      - paperless-rest

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    volumes:
      - rabbitmq-dev:/var/lib/rabbitmq/
      - rabbitmq-dev:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: 
      - external-nw

  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - minio:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=passw0rd
    ports: 
      - "9000:9000"
      - "9090:9001"
    command: server /data --console-address ":9090"
    networks:
      - external-nw

  database:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=Paperless 
    volumes:
      - postgres-db-dev:/var/lib/postgresql/data
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql # erg√§nzung sobald wie eine sql.init file haben
    ports:
      - "5432:5432"
    networks: 
      - external-nw